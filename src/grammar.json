{
  "name": "enumerion",
  "rules": {
    "source_file": {
      "type": "REPEAT",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SYMBOL",
            "name": "comment"
          },
          {
            "type": "SYMBOL",
            "name": "toplevel"
          }
        ]
      }
    },
    "comment": {
      "type": "PATTERN",
      "value": "(\\(\\*.*\\*\\))"
    },
    "toplevel": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "check"
            },
            {
              "type": "SYMBOL",
              "name": "_expr"
            }
          ]
        }
      ]
    },
    "_expr": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_infix_expr"
        },
        {
          "type": "SYMBOL",
          "name": "lambda_expr"
        },
        {
          "type": "SYMBOL",
          "name": "dependent_function"
        },
        {
          "type": "SYMBOL",
          "name": "simple_function"
        },
        {
          "type": "SYMBOL",
          "name": "exists_expr"
        },
        {
          "type": "SYMBOL",
          "name": "forall_expr"
        },
        {
          "type": "SYMBOL",
          "name": "match_expr"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_infix_expr"
            },
            {
              "type": "SYMBOL",
              "name": "colon"
            },
            {
              "type": "SYMBOL",
              "name": "_expr"
            }
          ]
        }
      ]
    },
    "_infix_expr": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_app_expr"
        },
        {
          "type": "SYMBOL",
          "name": "_darrow_expr"
        },
        {
          "type": "SYMBOL",
          "name": "_or_expr"
        },
        {
          "type": "SYMBOL",
          "name": "_and_expr"
        },
        {
          "type": "SYMBOL",
          "name": "_lt_expr"
        },
        {
          "type": "SYMBOL",
          "name": "_leq_expr"
        },
        {
          "type": "SYMBOL",
          "name": "_equal_expr"
        },
        {
          "type": "SYMBOL",
          "name": "_plus_expr"
        },
        {
          "type": "SYMBOL",
          "name": "_minus_expr"
        },
        {
          "type": "SYMBOL",
          "name": "_times_expr"
        },
        {
          "type": "SYMBOL",
          "name": "_divide_expr"
        },
        {
          "type": "SYMBOL",
          "name": "_pow_expr"
        }
      ]
    },
    "_app_expr": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_prefix_expr"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "neg"
            },
            {
              "type": "SYMBOL",
              "name": "_prefix_expr"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "fin"
            },
            {
              "type": "SYMBOL",
              "name": "_prefix_expr"
            }
          ]
        }
      ]
    },
    "_prefix_expr": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_proj_expr"
        }
      ]
    },
    "_proj_expr": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_simple_expr"
        }
      ]
    },
    "_simple_expr": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "lparen"
            },
            {
              "type": "SYMBOL",
              "name": "_expr"
            },
            {
              "type": "SYMBOL",
              "name": "rparen"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "begin"
            },
            {
              "type": "SYMBOL",
              "name": "_expr"
            },
            {
              "type": "SYMBOL",
              "name": "end"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "numeral"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "SYMBOL",
          "name": "enum"
        },
        {
          "type": "SYMBOL",
          "name": "finite"
        },
        {
          "type": "SYMBOL",
          "name": "prop"
        },
        {
          "type": "SYMBOL",
          "name": "nat"
        },
        {
          "type": "SYMBOL",
          "name": "true_const"
        },
        {
          "type": "SYMBOL",
          "name": "false_const"
        }
      ]
    },
    "lambda_expr": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "lambda"
        },
        {
          "type": "SYMBOL",
          "name": "_lambda_abstraction"
        },
        {
          "type": "SYMBOL",
          "name": "darrow"
        },
        {
          "type": "SYMBOL",
          "name": "_expr"
        }
      ]
    },
    "dependent_function": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "prod"
        },
        {
          "type": "SYMBOL",
          "name": "_quantifier_abstraction"
        },
        {
          "type": "SYMBOL",
          "name": "comma"
        },
        {
          "type": "SYMBOL",
          "name": "_expr"
        }
      ]
    },
    "simple_function": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_infix_expr"
        },
        {
          "type": "SYMBOL",
          "name": "arrow"
        },
        {
          "type": "SYMBOL",
          "name": "_expr"
        }
      ]
    },
    "exists_expr": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "exists"
        },
        {
          "type": "SYMBOL",
          "name": "_quantifier_abstraction"
        },
        {
          "type": "SYMBOL",
          "name": "comma"
        },
        {
          "type": "SYMBOL",
          "name": "_expr"
        }
      ]
    },
    "forall_expr": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "forall"
        },
        {
          "type": "SYMBOL",
          "name": "_quantifier_abstraction"
        },
        {
          "type": "SYMBOL",
          "name": "comma"
        },
        {
          "type": "SYMBOL",
          "name": "_expr"
        }
      ]
    },
    "match_expr": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "match"
        },
        {
          "type": "SYMBOL",
          "name": "_expr"
        },
        {
          "type": "SYMBOL",
          "name": "with_keyword"
        },
        {
          "type": "SYMBOL",
          "name": "_match_cases"
        },
        {
          "type": "SYMBOL",
          "name": "end"
        }
      ]
    },
    "_darrow_expr": {
      "type": "PREC_RIGHT",
      "value": 0,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "_infix_expr"
          },
          {
            "type": "SYMBOL",
            "name": "darrow"
          },
          {
            "type": "SYMBOL",
            "name": "_infix_expr"
          }
        ]
      }
    },
    "_or_expr": {
      "type": "PREC_LEFT",
      "value": 0,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "_infix_expr"
          },
          {
            "type": "SYMBOL",
            "name": "lor"
          },
          {
            "type": "SYMBOL",
            "name": "_infix_expr"
          }
        ]
      }
    },
    "_and_expr": {
      "type": "PREC_LEFT",
      "value": 0,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "_infix_expr"
          },
          {
            "type": "SYMBOL",
            "name": "land"
          },
          {
            "type": "SYMBOL",
            "name": "_infix_expr"
          }
        ]
      }
    },
    "_lt_expr": {
      "type": "PREC_LEFT",
      "value": 0,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "_infix_expr"
          },
          {
            "type": "SYMBOL",
            "name": "lt"
          },
          {
            "type": "SYMBOL",
            "name": "_infix_expr"
          }
        ]
      }
    },
    "_leq_expr": {
      "type": "PREC_LEFT",
      "value": 0,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "_infix_expr"
          },
          {
            "type": "SYMBOL",
            "name": "leq"
          },
          {
            "type": "SYMBOL",
            "name": "_infix_expr"
          }
        ]
      }
    },
    "_equal_expr": {
      "type": "PREC_LEFT",
      "value": 0,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "_infix_expr"
          },
          {
            "type": "SYMBOL",
            "name": "equal"
          },
          {
            "type": "SYMBOL",
            "name": "_infix_expr"
          }
        ]
      }
    },
    "_plus_expr": {
      "type": "PREC_LEFT",
      "value": 0,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "_infix_expr"
          },
          {
            "type": "SYMBOL",
            "name": "plus"
          },
          {
            "type": "SYMBOL",
            "name": "_infix_expr"
          }
        ]
      }
    },
    "_minus_expr": {
      "type": "PREC_LEFT",
      "value": 0,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "_infix_expr"
          },
          {
            "type": "SYMBOL",
            "name": "minus"
          },
          {
            "type": "SYMBOL",
            "name": "_infix_expr"
          }
        ]
      }
    },
    "_times_expr": {
      "type": "PREC_LEFT",
      "value": 0,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "_infix_expr"
          },
          {
            "type": "SYMBOL",
            "name": "times"
          },
          {
            "type": "SYMBOL",
            "name": "_infix_expr"
          }
        ]
      }
    },
    "_divide_expr": {
      "type": "PREC_LEFT",
      "value": 0,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "_infix_expr"
          },
          {
            "type": "SYMBOL",
            "name": "divide"
          },
          {
            "type": "SYMBOL",
            "name": "_infix_expr"
          }
        ]
      }
    },
    "_pow_expr": {
      "type": "PREC_RIGHT",
      "value": 0,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "_infix_expr"
          },
          {
            "type": "SYMBOL",
            "name": "pow"
          },
          {
            "type": "SYMBOL",
            "name": "_infix_expr"
          }
        ]
      }
    },
    "_lambda_abstraction": {
      "type": "CHOICE",
      "members": [
        {
          "type": "REPEAT1",
          "content": {
            "type": "SYMBOL",
            "name": "identifier"
          }
        },
        {
          "type": "REPEAT1",
          "content": {
            "type": "SYMBOL",
            "name": "_typed_binder"
          }
        }
      ]
    },
    "_quantifier_abstraction": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "REPEAT1",
              "content": {
                "type": "SYMBOL",
                "name": "identifier"
              }
            },
            {
              "type": "SYMBOL",
              "name": "colon"
            },
            {
              "type": "SYMBOL",
              "name": "_expr"
            }
          ]
        },
        {
          "type": "REPEAT1",
          "content": {
            "type": "SYMBOL",
            "name": "_typed_binder"
          }
        }
      ]
    },
    "_typed_binder": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "lparen"
        },
        {
          "type": "REPEAT1",
          "content": {
            "type": "SYMBOL",
            "name": "identifier"
          }
        },
        {
          "type": "SYMBOL",
          "name": "colon"
        },
        {
          "type": "SYMBOL",
          "name": "_expr"
        },
        {
          "type": "SYMBOL",
          "name": "rparen"
        }
      ]
    },
    "_match_cases": {
      "type": "REPEAT1",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "vbar"
          },
          {
            "type": "SYMBOL",
            "name": "_match_case"
          }
        ]
      }
    },
    "_match_case": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_pattern"
        },
        {
          "type": "SYMBOL",
          "name": "darrow"
        },
        {
          "type": "SYMBOL",
          "name": "_expr"
        }
      ]
    },
    "_pattern": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "tag"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "tag"
            },
            {
              "type": "SYMBOL",
              "name": "lparen"
            },
            {
              "type": "SYMBOL",
              "name": "identifier"
            },
            {
              "type": "SYMBOL",
              "name": "colon"
            },
            {
              "type": "SYMBOL",
              "name": "_expr"
            },
            {
              "type": "SYMBOL",
              "name": "rparen"
            }
          ]
        }
      ]
    },
    "check": {
      "type": "PREC",
      "value": 2,
      "content": {
        "type": "STRING",
        "value": "check"
      }
    },
    "prop": {
      "type": "PREC",
      "value": 2,
      "content": {
        "type": "STRING",
        "value": "Prop"
      }
    },
    "finite": {
      "type": "PREC",
      "value": 2,
      "content": {
        "type": "STRING",
        "value": "Finite"
      }
    },
    "enum": {
      "type": "PREC",
      "value": 2,
      "content": {
        "type": "STRING",
        "value": "Enum"
      }
    },
    "nat": {
      "type": "PREC",
      "value": 2,
      "content": {
        "type": "STRING",
        "value": "Nat"
      }
    },
    "fin": {
      "type": "PREC",
      "value": 2,
      "content": {
        "type": "STRING",
        "value": "Fin"
      }
    },
    "size": {
      "type": "PREC",
      "value": 2,
      "content": {
        "type": "STRING",
        "value": "size"
      }
    },
    "stream": {
      "type": "PREC",
      "value": 2,
      "content": {
        "type": "STRING",
        "value": "stream"
      }
    },
    "enumerate": {
      "type": "PREC",
      "value": 2,
      "content": {
        "type": "STRING",
        "value": "enumerate"
      }
    },
    "with_keyword": {
      "type": "PREC",
      "value": 2,
      "content": {
        "type": "STRING",
        "value": "with"
      }
    },
    "match": {
      "type": "PREC",
      "value": 2,
      "content": {
        "type": "STRING",
        "value": "match"
      }
    },
    "begin": {
      "type": "PREC",
      "value": 2,
      "content": {
        "type": "STRING",
        "value": "begin"
      }
    },
    "end": {
      "type": "PREC",
      "value": 2,
      "content": {
        "type": "STRING",
        "value": "end"
      }
    },
    "true_const": {
      "type": "PREC",
      "value": 10,
      "content": {
        "type": "PATTERN",
        "value": "(True)|(\\u22A4)"
      }
    },
    "false_const": {
      "type": "PREC",
      "value": 10,
      "content": {
        "type": "PATTERN",
        "value": "(False)|(\\u22A5)"
      }
    },
    "lambda": {
      "type": "PREC",
      "value": 10,
      "content": {
        "type": "PATTERN",
        "value": "(fun)|(\\u03BB)"
      }
    },
    "prod": {
      "type": "PREC",
      "value": 10,
      "content": {
        "type": "PATTERN",
        "value": "(product)|(\\u03A0)|(\\u220F)"
      }
    },
    "arrow": {
      "type": "PATTERN",
      "value": "(->)|(\\u2192)"
    },
    "darrow": {
      "type": "PATTERN",
      "value": "(=>)|(\\u21D2)"
    },
    "plus": {
      "type": "STRING",
      "value": "+"
    },
    "minus": {
      "type": "STRING",
      "value": "-"
    },
    "times": {
      "type": "STRING",
      "value": "*"
    },
    "divide": {
      "type": "STRING",
      "value": "/"
    },
    "pow": {
      "type": "STRING",
      "value": "**"
    },
    "lt": {
      "type": "STRING",
      "value": "<"
    },
    "leq": {
      "type": "PATTERN",
      "value": "(<=)|(\\u2264)"
    },
    "equal": {
      "type": "STRING",
      "value": "="
    },
    "exists": {
      "type": "PREC",
      "value": 10,
      "content": {
        "type": "PATTERN",
        "value": "(exists)|(\\u2203)"
      }
    },
    "forall": {
      "type": "PREC",
      "value": 10,
      "content": {
        "type": "PATTERN",
        "value": "(forall)|(\\u2200)"
      }
    },
    "land": {
      "type": "PATTERN",
      "value": "(&&)|(\\u2227)"
    },
    "lor": {
      "type": "PATTERN",
      "value": "(\\|\\|)|(\\u2228)"
    },
    "neg": {
      "type": "PREC",
      "value": 1,
      "content": {
        "type": "PATTERN",
        "value": "(not)|(\\u00AC¬)"
      }
    },
    "colon": {
      "type": "STRING",
      "value": ":"
    },
    "lparen": {
      "type": "STRING",
      "value": "("
    },
    "rparen": {
      "type": "STRING",
      "value": ")"
    },
    "lbrace": {
      "type": "STRING",
      "value": "{"
    },
    "rbrace": {
      "type": "STRING",
      "value": "}"
    },
    "comma": {
      "type": "STRING",
      "value": ","
    },
    "semicolon": {
      "type": "STRING",
      "value": ";"
    },
    "vbar": {
      "type": "STRING",
      "value": "|"
    },
    "coloneq": {
      "type": "STRING",
      "value": ":="
    },
    "identifier": {
      "type": "PATTERN",
      "value": "(_[a-z0-9][a-z0-9_]*)|([a-z][a-z0-9]*)"
    },
    "numeral": {
      "type": "PATTERN",
      "value": "(\\d+)"
    },
    "tag": {
      "type": "PATTERN",
      "value": "(`[a-z][a-z0-9_]*)"
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": []
}

